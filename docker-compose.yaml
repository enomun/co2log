version: '3.2'

services:
  # co2plot:
  #   build: ./co2logger
  #   image: co2logger
  #   volumes:
  #     - type: bind
  #       source: "./db"
  #       target: "/db"
  #     - type: bind
  #       source: "./web/images"
  #       target: "/image"
  #     - type: bind
  #       source: "./co2logger"
  #       target: "/app"
  #   environment:
  #     TZ: Asia/Tokyo
  #   working_dir: /app
  #   command: python plot_co2.py --interval 60 --dbpath /db/co2.db --outpath /image/result.png

  temperature:
    build: ./co2logger
    image: co2logger
    volumes:
      - type: volume
        source: nas
        target: "/data"
      - type: bind
        source: "./co2logger"
        target: "/app"
    privileged: true
    environment:
      TZ: Asia/Tokyo
      PYTHONUNBUFFERED: 1
    working_dir: /app
    devices:
      - "/dev/i2c-1:/dev/i2c-1"
      - "/dev/gpiomem:/dev/gpiomem"
    command: python log_tmp.py --dbpath /data/dht20
    # command:  sh -c "while true; do sleep 1; done"
  
  co2display:
    build: ./co2logger
    image: co2logger
    volumes:
      - type: bind
        source: "./db"
        target: "/db"
      - type: volume
        source: nas
        target: "/data"
      - type: bind
        source: "./co2logger"
        target: "/app"
    privileged: true
    environment:
      TZ: Asia/Tokyo
      PYTHONUNBUFFERED: 1
    working_dir: /app
    devices:
      - "/dev/i2c-1:/dev/i2c-1"
      - "/dev/gpiomem:/dev/gpiomem"
    command: python display_co2.py --interval_sec 20 --dbpath /db/co2.db --fp_csv /data/dht20

  
  co2log:
    build: ./co2logger
    image: co2logger
    volumes:
      - ./db:/db
      - type: bind
        source: "./co2logger"
        target: "/app"
    environment:
      TZ: Asia/Tokyo
    working_dir: /app
    devices:
      - "/dev/ttyS0:/dev/ttyS0"
    command: python log_co2.py --interval 20 --dbpath /db/co2.db
    

  
  
  # web:
  #   build: ./web
  #   image: co2web
  #   ports:
  #     - 8000:8000
  #   volumes:
  #     - type: bind
  #       source: "./web"
  #       target: "/web"
  #   working_dir: /web

volumes:
  nas:
    name: nas-data
    external: true